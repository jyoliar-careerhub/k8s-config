apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway-internal
    app.kubernetes.io/version: 1.6.2
  name: nginx-gateway-internal
  namespace: nginx-gateway
spec:
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name:
  selector:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway-internal
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway-internal
    app.kubernetes.io/version: 1.6.2
  name: nginx-gateway-internal
  namespace: nginx-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: nginx-gateway
      app.kubernetes.io/name: nginx-gateway-internal
  template:
    metadata:
      annotations:
        prometheus.io/port: "9113"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/instance: nginx-gateway
        app.kubernetes.io/name: nginx-gateway-internal
    spec:
      containers:
        - args:
            - static-mode
            - --gateway-ctlr-name=gateway.nginx.org/nginx-gateway-controller-internal
            - --gatewayclass=nginx-internal
            - --config=nginx-gateway-config
            - --service=nginx-gateway-internal
            - --metrics-port=9113
            - --health-port=8081
            - --leader-election-lock-name=nginx-gateway-leader-election
            - --snippets-filters
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          image: ghcr.io/nginx/nginx-gateway-fabric:1.6.2
          imagePullPolicy: IfNotPresent
          name: nginx-gateway
          ports:
            - containerPort: 9113
              name: metrics
            - containerPort: 8081
              name: health
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 3
            periodSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - KILL
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 102
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-conf
            - mountPath: /etc/nginx/stream-conf.d
              name: nginx-stream-conf
            - mountPath: /etc/nginx/main-includes
              name: nginx-main-includes
            - mountPath: /etc/nginx/secrets
              name: nginx-secrets
            - mountPath: /var/run/nginx
              name: nginx-run
            - mountPath: /etc/nginx/includes
              name: nginx-includes
        - image: ghcr.io/nginx/nginx-gateway-fabric/nginx:1.6.2
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginx-conf
            - mountPath: /etc/nginx/stream-conf.d
              name: nginx-stream-conf
            - mountPath: /etc/nginx/main-includes
              name: nginx-main-includes
            - mountPath: /etc/nginx/secrets
              name: nginx-secrets
            - mountPath: /var/run/nginx
              name: nginx-run
            - mountPath: /var/cache/nginx
              name: nginx-cache
            - mountPath: /etc/nginx/includes
              name: nginx-includes
      initContainers:
        - command:
            - /usr/bin/gateway
            - initialize
            - --source
            - /includes/main.conf
            - --destination
            - /etc/nginx/main-includes
          env:
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          image: ghcr.io/nginx/nginx-gateway-fabric:1.6.2
          imagePullPolicy: IfNotPresent
          name: init
          securityContext:
            capabilities:
              add:
                - KILL
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 102
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /includes
              name: nginx-includes-bootstrap
            - mountPath: /etc/nginx/main-includes
              name: nginx-main-includes
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      serviceAccountname: nginx-gateway
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: nginx-conf
        - emptyDir: {}
          name: nginx-stream-conf
        - emptyDir: {}
          name: nginx-main-includes
        - emptyDir: {}
          name: nginx-secrets
        - emptyDir: {}
          name: nginx-run
        - emptyDir: {}
          name: nginx-cache
        - emptyDir: {}
          name: nginx-includes
        - configMap:
            name: nginx-includes-bootstrap
          name: nginx-includes-bootstrap
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  labels:
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/name: nginx-gateway-internal
    app.kubernetes.io/version: 1.6.2
  name: nginx-internal
spec:
  controllerName: gateway.nginx.org/nginx-gateway-controller-internal
